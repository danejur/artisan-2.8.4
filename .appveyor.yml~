###################################################################
# Appveyor CI configuration to build Artisan install packages
#     for Windows, Windows legacy, macOS, and Linux
###################################################################
# Include "skip ci" in the commit message to prevent this build process from running
#
environment:
  # Set the Appveyor Python version for windows, macos and linux here. Does not affect windows_legacy.
  PYTHON_V: 3.11
  # Upgrade to specific version (for platforms supporting upgrade). Upgrade skipped if missing or blank.
#  PYUPGRADE_V: 3.11.3

  matrix:
  - job_name: linux
    appveyor_build_worker_image: Ubuntu2004


# Generic build number, later set to commit hash by init
version: '{build}'

# Do not build on tags
skip_tags: true
clone_depth: 1

init:
  # Sets the commit hash to "build version number" shown in appveyor build status, the build number keeps it unique
  - ps: Update-AppveyorBuild -Version "$($env:APPVEYOR_REPO_COMMIT.substring(0,7)) ($env:APPVEYOR_BUILD_NUMBER)"

branches:
  only:
    - master

stack:
  python ${PYTHON_V}

for:
-
  matrix:
    only:
      - job_name: linux
    fast_finish: false

  environment:
    ARTISAN_OS: linux
    PYTHON_PATH: /home/appveyor/venv${PYTHON_V}/lib/python${PYTHON_V}/site-packages
    QT_PATH: $PYTHON_PATH/PyQt6/Qt6

  install:
    - echo "Linux Install"
    - chmod +x .ci/*.sh

    # pull library versions from requirments file
    - ps: $env:LIBUSB_VER = Select-String -Path ./src/requirements-linux.txt 'libusb==([\d\.]*)' -List | ForEach-Object {$_.Matches.Groups[1].Value}

    # update the __revision__ field with the left seven of the GIT commit hash
    - export GIT_VERSION=`git rev-parse --verify --short HEAD 2>/dev/null|| echo "???"`
    - sed -i'' -e "s/__revision__ = '0'/__revision__ = '$GIT_VERSION'/" src/artisanlib/__init__.py

    # run the install script
    - .ci/install-linux.sh

  build_script:
    - echo "Linux Build"
    - chmod +x src/*.sh
    - cd src

    # run the build scripts
    - ./build-linux.sh
    - ./build-linux-pkg.sh

#  test_script:
#    - QT_QPA_PLATFORM=offscreen python -m unittest discover -s src

  artifacts:
    - path: 'src/artisan-*.deb'
    - path: 'src/artisan-*.rpm'
    - path: 'src/artisan-*.AppImage'

